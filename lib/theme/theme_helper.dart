import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onError.withOpacity(1),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.gray100,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: colorScheme.primary.withOpacity(0.39),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: 16.fSize,
          fontFamily: 'Tenor Sans',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.red300,
          fontSize: 15.fSize,
          fontFamily: 'Tenor Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray700,
          fontSize: 12.fSize,
          fontFamily: 'Tenor Sans',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.gray5001,
          fontSize: 41.fSize,
          fontFamily: 'Bodoni Moda 28pt',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.blueGray900.withOpacity(0.6),
          fontSize: 38.fSize,
          fontFamily: 'Bodoni Moda 28pt',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: Color(0XFF333333),
          fontSize: 30.fSize,
          fontFamily: 'Bodoni Moda 28pt',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray5001,
          fontSize: 12.fSize,
          fontFamily: 'Bodoni Moda 28pt',
          fontWeight: FontWeight.w900,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF000000),
    primaryContainer: Color(0XFF1A1A1A),
    secondaryContainer: Color(0X99000000),

    // Error colors
    onError: Color(0X63FFFFFF),

    // On colors(text colors)
    onPrimary: Color(0XFF29323C),
    onPrimaryContainer: Color(0XFFAAAAAA),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // BlueGray
  Color get blueGray100 => Color(0XFFD3D3D3);
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray700 => Color(0XFF485563);
  Color get blueGray900 => Color(0XFF333333);
  Color get blueGray90001 => Color(0XFF343333);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFFFC8A9);
  Color get deepOrange10001 => Color(0XFFE0CFBA);
  Color get deepOrange50 => Color(0XFFF8F0E7);

  // DeepPurple
  Color get deepPurple300 => Color(0XFFA981BB);

  // Gray
  Color get gray100 => Color(0XFFF5F5F5);
  Color get gray10001 => Color(0XFFF2F2F2);
  Color get gray300 => Color(0XFFDEDEDE);
  Color get gray400 => Color(0XFFC4C4C4);
  Color get gray50 => Color(0XFFF8F8F8);
  Color get gray500 => Color(0XFF979797);
  Color get gray5001 => Color(0XFFFCFCFC);
  Color get gray600 => Color(0XFFA8715A);
  Color get gray700 => Color(0XFF555555);
  Color get gray800 => Color(0XFF434343);
  Color get gray900 => Color(0XFF14142A);
  Color get gray90001 => Color(0XFF14132A);
  Color get gray90002 => Color(0XFF111111);
  Color get gray90003 => Color(0XFF17181A);
  Color get gray90004 => Color(0XFF212806);

  // Indigo
  Color get indigo50 => Color(0XFFE7EAEF);
  Color get indigo500 => Color(0XFF3B41C5);

  // Red
  Color get red300 => Color(0XFFDD8560);
  Color get redA700 => Color(0XFFED0006);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
